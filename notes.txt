
	switch operator() {
	case "src", "source":
		if haveOperand(0) {
			switch getOperand(0) {
			case "en", "enc", "encode":
				if haveOperand(1) {
					notes.DefineObjectiveDirectory(notes.ObjectiveKeyTargetWeb,getOperand(1))
					if haveOperand(2) {
						notes.DefineTextFiles(listOperands(2))

						var target notes.IndexFile
						for _, target = range notes.ListIndexSource(notes.IndexFileTypeTXT) {

							fmt.Println(target)
						}
						os.Exit(0)
					} else {
						usage()
					}
				} else {
					usage()
				}
			case "up", "upd", "update":
				if haveOperand(1) {
					if notes.DefineObjectiveDirectory(notes.ObjectiveKeyTargetWeb,getOperand(1)) {
						var file notes.IndexFile
						for _, file = range notes.ListIndexSource(notes.IndexFileTypeSVG) {
							
							fmt.Println(file)
						}
						os.Exit(0)
					} else {
						usage()
					}
				} else {
					usage()
				}
			case "co", "con", "contents":
				if haveOperand(1) {
					if notes.DefineObjectiveDirectory(notes.ObjectiveKeyTargetWeb,getOperand(1)) {
						var target notes.IndexTarget
						for _, target = range notes.ListIndexTarget(notes.IndexFileTypeJSN) {
							
							fmt.Println(target.Path())
						}
						os.Exit(0)
					} else {
						usage()
					}
				} else {
					usage()
				}
			case "ta", "tab", "tabulate":
				if haveOperand(1) {
					if notes.DefineObjectiveDirectory(notes.ObjectiveKeyTargetWeb,getOperand(1)) {
						var target notes.IndexFile
						for _, target = range notes.ListIndexSource(notes.IndexFileTypeJSN) {
							
							fmt.Println(target)
						}
						os.Exit(0)
					} else {
						usage()
					}
				} else {
					usage()
				}
			default:
				usage()
			}
		} else {
			usage()
		}
	case "tgt", "target":
		if haveOperand(0) {
			switch getOperand(0) {
			case "en", "enc", "encode":
				if haveOperand(1) {
					notes.DefineObjectiveDirectory(notes.ObjectiveKeyTargetWeb,getOperand(1))
					if haveOperand(2) {
						notes.DefineTextFiles(listOperands(2))

						var target notes.IndexFile
						for _, target = range notes.ListIndexSource(notes.IndexFileTypeTXT) {

							fmt.Println(target.FileTarget("svg"))
						}
						os.Exit(0)
					} else {
						usage()
					}
				} else {
					usage()
				}
			case "up", "upd", "update":
				if haveOperand(1) {
					if notes.DefineObjectiveDirectory(notes.ObjectiveKeyTargetWeb,getOperand(1)) {
						var target notes.IndexTarget
						for _, target = range notes.ListIndexFiles() {
							
							fmt.Println(target.Path())
						}
						os.Exit(0)
					} else {
						usage()
					}
				} else {
					usage()
				}
			case "co", "con", "contents":
				if haveOperand(1) {
					if notes.DefineObjectiveDirectory(notes.ObjectiveKeyTargetWeb,getOperand(1)) {
						var target notes.IndexTarget
						for _, target = range notes.ListIndexTarget(notes.IndexFileTypeJSN) {
							
							fmt.Println(target.CatalogTarget())
						}
						os.Exit(0)
					} else {
						usage()
					}
				} else {
					usage()
				}
			case "ta", "tab", "tabulate":
				if haveOperand(1) {
					if notes.DefineObjectiveDirectory(notes.ObjectiveKeyTargetWeb,getOperand(1)) {
						var target notes.IndexTarget
						for _, target = range notes.ListIndexTarget(notes.IndexFileTypeJSN) {
							
							fmt.Println(target.TabulateTarget())
						}
						os.Exit(0)
					} else {
						usage()
					}
				} else {
					usage()
				}
			default:
				usage()
			}
		} else {
			usage()
		}
	case "en", "enc", "encode":
		if haveOperand(0) {
			notes.DefineObjectiveDirectory(notes.ObjectiveKeyTargetWeb,getOperand(0))
			if haveOperand(1) {
				if haveOperand(2) {
					notes.DefineTextFiles(listOperands(2))

					var target notes.IndexFile
					for _, target = range notes.ListIndexSource(notes.IndexFileTypeTXT) {

						target.CodeWrite()
					}
				}
				os.Exit(0)
			} else {
				usage()
			}
		} else {
			usage()
		}
	case "up", "upd", "update":
		if haveOperand(0) {
			if notes.DefineObjectiveDirectory(notes.ObjectiveKeyTargetWeb,getOperand(0)) {
				var target notes.IndexTarget
				for _, target = range notes.ListIndexFiles() {
					
					target.IndexWrite()
				}
				os.Exit(0)
			} else {
				usage()
			}
		} else {
			usage()
		}
	case "co", "con", "contents":
		if haveOperand(0) {
			if notes.DefineObjectiveDirectory(notes.ObjectiveKeyTargetWeb,getOperand(0)) {
				var target notes.IndexTarget
				for _, target = range notes.ListIndexTarget(notes.IndexFileTypeJSN) {
					
					target.CatalogWrite()
				}
				os.Exit(0)
			} else {
				usage()
			}
		} else {
			usage()
		}
	case "ta", "tab", "tabulate":
		if haveOperand(0) {
			if notes.DefineObjectiveDirectory(notes.ObjectiveKeyTargetWeb,getOperand(0)) {
				var target notes.IndexTarget
				for _, target = range notes.ListIndexTarget(notes.IndexFileTypeJSN) {
					
					target.TabulateWrite()
				}
				os.Exit(0)
			} else {
				usage()
			}
		} else {
			usage()
		}
	default:
		usage()
	}
